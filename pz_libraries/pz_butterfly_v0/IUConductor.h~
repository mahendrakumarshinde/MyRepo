#ifndef IUCONDUCTOR_H
#define IUCONDUCTOR_H

#include <Arduino.h>
#include "IUFeature.h"
#include "IUInterface.h"

/**
 * A class to hold create, configure, activate and hold features
 * In current implementation, max possible number of features is fixed to 10,
 * change static class member 'maxFeatureCount' if more is needed.
 */
class IUConductor
{
  public:
    // Arrays have to be initialized with a fixed size,
    // so we chose max_size = max number of features per collections
    static const uint8_t maxFeatureCount = 10;
    IUFeatureHandler(IUInterface *iuI2C, IUInterface *iuBluetooth = NULL, IUInterface *iuWifi = NULL);
    virtual ~IUFeatureHandler();
    void resetFeatures();
    bool addFeature(IUABCFeature *feature);
    IUABCFeature getFeature(uint8_t index);
    uint8_t getFeatureCount() { return m_featureCount; }

  protected:
    IUABCFeature *m_features[maxFeatureCount];
    uint8_t m_featureCount; // Dynamic
    IUInterface *m_iuI2C;
    IUInterface *m_iuBluetooth;
    IUInterface *m_iuWifi;

};



/* ===================================== Feature Instanciations ======================================== */
/*
extern IUMultiQ15SourceDataCollectionFeature showRecordFFT;
extern IUMultiQ15SourceFeature accelerationEnergy;
extern IUMultiQ15SourceFeature velocityX;
extern IUMultiQ15SourceFeature velocityY;
extern IUMultiQ15SourceFeature velocityZ;
extern IUSingleFloatSourceFeature temperature;
extern IUSingleFloatSourceFeature audioDB;
*/


#endif // IUCONDUCTOR_H






