


/* =============================================================================
    Utilities
============================================================================= */

struct ThreeAxisFloatFeature
{
    FloatFeature X;
    FloatFeature Y;
    FloatFeature Z;
};

struct ThreeAxisQ15Feature
{
    Q15Feature X;
    Q15Feature Y;
    Q15Feature Z;
};

struct ThreeAxisQ31Feature
{
    Q31Feature X;
    Q31Feature Y;
    Q31Feature Z;
};

struct ThreeAxisQ15Array1024
{
    q15_t X[1024];
    q15_t Y[1024];
    q15_t Z[1024];
};

struct ThreeAxisFloatArray2
{
    float X[2];
    float Y[2];
    float Z[2];
};


struct AccelerationFeatures
{
    public:
        AccelerationFeatures();
        /***** Acceleration Features *****/
        ThreeAxisQ15Feature sensorData;
        ThreeAxisFloatFeature energy128;
        ThreeAxisFloatFeature power128;
        ThreeAxisFloatFeature rms128;
        ThreeAxisFloatFeature energy512;
        ThreeAxisFloatFeature power512;
        ThreeAxisFloatFeature rms512;

    protected:
        /***** Acceleration *****/
        ThreeAxisQ15Array1024 m_sensorData;
        ThreeAxisFloatArray2 m_energy128;
        ThreeAxisFloatArray2 m_power128;
        ThreeAxisFloatArray2 m_rms128;
        ThreeAxisFloatArray2 m_energy512;
        ThreeAxisFloatArray2 m_power512;
        ThreeAxisFloatArray2 m_rms512;
};



//struct featureStruct
//{
//    static const uint8_t COUNT = 41;
//    static const uint8_t COMPUTER_COUNT = 41;
//
//    FeatureBuffer *all[COUNT];
//    FeatureComputer *computers[COUNT];
//
////    FeatureBuffer *all[COUNT];
//
//    static void setUpComputerSource();
//
//};
//
//extern featureStruct FEATURES;




